// <auto-generated />
using System;
using Infrastructure.Database.MySQLDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(caDBContext))]
    [Migration("20231220090435_seedUsers")]
    partial class seedUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("CanFly")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Birds");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ff05880-c1ba-40af-a8de-d7705ba6375a"),
                            Breed = "",
                            CanFly = true,
                            Color = "",
                            Name = "Robin",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("842726c1-df7f-44be-859c-fe577f8e2a71"),
                            Breed = "",
                            CanFly = true,
                            Color = "",
                            Name = "Sparrow",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("731fd909-6968-431a-ac7e-418aee076b7b"),
                            Breed = "",
                            CanFly = true,
                            Color = "",
                            Name = "Birdy",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("85872dca-d934-4823-8c5f-59ccfb0f419f"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            Name = "Herdy",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("346c907e-0445-4e7a-a99e-5b6a67db93d0"),
                            Breed = "",
                            CanFly = true,
                            Color = "",
                            Name = "Gerdy",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("59d8fc74-3c94-4ed8-9a38-36b0b6b1074a"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            Name = "TestBirdForUnitTests",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fd22425d-6efd-4d5d-894d-75607a5cd26b"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = true,
                            Name = "Fluffy",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("849e9fff-07bb-4045-94fd-9ef1d61084e4"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Whiskers",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("77c90efe-3c6a-4f70-b9ae-cebd87a30a0b"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Lickers",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("cf18365b-f6dc-443d-bd41-79e985cb714a"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = true,
                            Name = "Sickers",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("80f80048-698e-41fd-9e60-0576c997ee38"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Fluffers",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("7e910a6d-8621-4f4b-8a0c-5e199f42eaa5"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "TestCatForUnitTests",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("290712e6-4723-4001-b172-4d7b49709777"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "PeppeLeDog",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("dc07f79d-ee8c-4040-839f-e52141774894"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Fofi",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("70e0fb8d-305e-4627-8314-8ab479451270"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Simo",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("8560a41e-c2ad-41f3-8f28-90cb9fbd683c"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Lano",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345678"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "TestDogForUnitTests",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.UserBird", b =>
                {
                    b.Property<Guid>("BirdId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("BirdId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBird");
                });

            modelBuilder.Entity("Domain.Models.UserCat", b =>
                {
                    b.Property<Guid>("CatId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("CatId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCat");
                });

            modelBuilder.Entity("Domain.Models.UserDog", b =>
                {
                    b.Property<Guid>("DogId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("DogId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDog");
                });

            modelBuilder.Entity("Domain.Models.UserBird", b =>
                {
                    b.HasOne("Domain.Models.Bird", "Bird")
                        .WithMany("UserBird")
                        .HasForeignKey("BirdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserBird")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bird");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.UserCat", b =>
                {
                    b.HasOne("Domain.Models.Cat", "Cat")
                        .WithMany("UserCat")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserCat")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.UserDog", b =>
                {
                    b.HasOne("Domain.Models.Dog", "Dog")
                        .WithMany("UserDog")
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserDog")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.Navigation("UserBird");
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.Navigation("UserCat");
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.Navigation("UserDog");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("UserBird");

                    b.Navigation("UserCat");

                    b.Navigation("UserDog");
                });
#pragma warning restore 612, 618
        }
    }
}
