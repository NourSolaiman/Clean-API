// <auto-generated />
using System;
using Infrastructure.Database.MySQLDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(caDBContext))]
    [Migration("20231220090922_seedUsers1")]
    partial class seedUsers1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("CanFly")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Birds");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7382ed16-7035-4e10-a37b-fbec530e2dfd"),
                            Breed = "",
                            CanFly = true,
                            Color = "",
                            Name = "Robin",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("db1e0c98-be46-49a2-8a15-068e9b6299b8"),
                            Breed = "",
                            CanFly = true,
                            Color = "",
                            Name = "Sparrow",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("2a6b452d-2f97-41e2-95af-0d10d17ae9a8"),
                            Breed = "",
                            CanFly = true,
                            Color = "",
                            Name = "Birdy",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("a0f4e1d4-280f-436f-9f3a-70bd46bb190a"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            Name = "Herdy",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("ff7f673f-7bcd-4109-aec6-66b9848bfa24"),
                            Breed = "",
                            CanFly = true,
                            Color = "",
                            Name = "Gerdy",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("59d8fc74-3c94-4ed8-9a38-36b0b6b1074a"),
                            Breed = "",
                            CanFly = false,
                            Color = "",
                            Name = "TestBirdForUnitTests",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("573aa112-9ed0-4139-845b-5b0183bf811d"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = true,
                            Name = "Fluffy",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("02b396db-9751-45f9-8543-67e759a26412"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Whiskers",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("88a38257-aeef-4ffb-859d-6e992f1a2397"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Lickers",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("dae1efe6-d2a9-4e24-8b25-2a508b3dd268"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = true,
                            Name = "Sickers",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("f61a056b-d0d5-483c-8d43-38431b9f529c"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Fluffers",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("7e910a6d-8621-4f4b-8a0c-5e199f42eaa5"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "TestCatForUnitTests",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e3dff0a4-1f8b-4382-b3d7-acdbc9644992"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "PeppeLeDog",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("acdf4a4f-25a2-444b-a30e-36265609d7f3"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Fofi",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("5e0cef03-f5e9-4038-a3a3-ad369996acc2"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Simo",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("64c25c48-49bb-43df-8731-f78a8a5c4ef5"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Lano",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345678"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "TestDogForUnitTests",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.UserBird", b =>
                {
                    b.Property<Guid>("BirdId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("BirdId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBird");
                });

            modelBuilder.Entity("Domain.Models.UserCat", b =>
                {
                    b.Property<Guid>("CatId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("CatId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCat");
                });

            modelBuilder.Entity("Domain.Models.UserDog", b =>
                {
                    b.Property<Guid>("DogId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("DogId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDog");
                });

            modelBuilder.Entity("Domain.Models.UserBird", b =>
                {
                    b.HasOne("Domain.Models.Bird", "Bird")
                        .WithMany("UserBird")
                        .HasForeignKey("BirdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserBird")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bird");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.UserCat", b =>
                {
                    b.HasOne("Domain.Models.Cat", "Cat")
                        .WithMany("UserCat")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserCat")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.UserDog", b =>
                {
                    b.HasOne("Domain.Models.Dog", "Dog")
                        .WithMany("UserDog")
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserDog")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.Navigation("UserBird");
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.Navigation("UserCat");
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.Navigation("UserDog");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("UserBird");

                    b.Navigation("UserCat");

                    b.Navigation("UserDog");
                });
#pragma warning restore 612, 618
        }
    }
}
