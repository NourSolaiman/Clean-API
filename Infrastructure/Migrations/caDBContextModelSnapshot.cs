// <auto-generated />
using System;
using Infrastructure.Database.MySQLDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(caDBContext))]
    partial class caDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("CanFly")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Birds");

                    b.HasData(
                        new
                        {
                            Id = new Guid("92eb2daa-8a56-4580-af4f-d1c0177c08f8"),
                            CanFly = true,
                            Color = "",
                            Name = "Robin"
                        },
                        new
                        {
                            Id = new Guid("59d035bb-53b5-4bb4-a69e-3ab00b446bdf"),
                            CanFly = true,
                            Color = "",
                            Name = "Sparrow"
                        },
                        new
                        {
                            Id = new Guid("c632f334-9c08-4961-b523-e4dd5fc48150"),
                            CanFly = true,
                            Color = "",
                            Name = "Birdy"
                        },
                        new
                        {
                            Id = new Guid("dcf4f387-6d9f-4999-a61e-b4d879f59edf"),
                            CanFly = false,
                            Color = "",
                            Name = "Herdy"
                        },
                        new
                        {
                            Id = new Guid("fc48da49-c140-42fc-bb5b-f52a1839d415"),
                            CanFly = true,
                            Color = "",
                            Name = "Gerdy"
                        },
                        new
                        {
                            Id = new Guid("59d8fc74-3c94-4ed8-9a38-36b0b6b1074a"),
                            CanFly = false,
                            Color = "",
                            Name = "TestBirdForUnitTests"
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f567f68-fb83-4e94-8fd0-aaf24a1130ad"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = true,
                            Name = "Fluffy",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("04cf4d4a-57f7-4530-bab2-8663e06d9168"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Whiskers",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("fa89151f-1a7d-47d1-86a2-4ad5dbbc0a22"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Lickers",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("405bb583-0f6e-4927-9274-75636da50e11"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = true,
                            Name = "Sickers",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("5318f313-7ebc-43e4-b32a-f9e1dfe9365d"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Fluffers",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("7e910a6d-8621-4f4b-8a0c-5e199f42eaa5"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "TestCatForUnitTests",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f3c2364-8955-4f73-9dfc-ab21a82797e7"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "PeppeLeDog",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("78f464db-9946-43d8-93a1-bfb95b0e1338"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Fofi",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("583d2d49-3e37-44bd-85e5-8ede3f511a6c"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Simo",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("ec9ffb12-9f87-450d-b7de-4fbaf91d43dc"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "Lano",
                            Weight = 0
                        },
                        new
                        {
                            Id = new Guid("12345678-1234-5678-1234-567812345678"),
                            Breed = "",
                            Color = "",
                            LikesToPlay = false,
                            Name = "TestDogForUnitTests",
                            Weight = 0
                        });
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.UserBird", b =>
                {
                    b.Property<Guid>("BirdId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("BirdId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBird");
                });

            modelBuilder.Entity("Domain.Models.UserCat", b =>
                {
                    b.Property<Guid>("CatId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("CatId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCat");
                });

            modelBuilder.Entity("Domain.Models.UserDog", b =>
                {
                    b.Property<Guid>("DogId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("DogId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDog");
                });

            modelBuilder.Entity("Domain.Models.UserBird", b =>
                {
                    b.HasOne("Domain.Models.Bird", "Bird")
                        .WithMany("UserBird")
                        .HasForeignKey("BirdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserBird")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bird");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.UserCat", b =>
                {
                    b.HasOne("Domain.Models.Cat", "Cat")
                        .WithMany("UserCat")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserCat")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.UserDog", b =>
                {
                    b.HasOne("Domain.Models.Dog", "Dog")
                        .WithMany("UserDog")
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserDog")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.Navigation("UserBird");
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.Navigation("UserCat");
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.Navigation("UserDog");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("UserBird");

                    b.Navigation("UserCat");

                    b.Navigation("UserDog");
                });
#pragma warning restore 612, 618
        }
    }
}
